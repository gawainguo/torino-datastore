<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaqi.torino.datastore.dao.NewsDao">
  <resultMap id="BaseResultMap" type="com.jiaqi.torino.datastore.model.entity.News">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fetcherSource" jdbcType="VARCHAR" property="fetcherSource" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="publishTime" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="urlHash" jdbcType="VARCHAR" property="urlHash" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jiaqi.torino.datastore.model.entity.News">
    <result column="extraInfo" jdbcType="LONGVARBINARY" property="extraInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fetcherSource, title, url, publishTime, createTime, urlHash
  </sql>
  <sql id="Blob_Column_List">
    extraInfo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jiaqi.torino.datastore.dao.example.NewsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jiaqi.torino.datastore.dao.example.NewsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiaqi.torino.datastore.dao.example.NewsExample">
    delete from news
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiaqi.torino.datastore.model.entity.News">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into news (fetcherSource, title, url, 
      publishTime, createTime, urlHash, 
      extraInfo)
    values (#{fetcherSource,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{urlHash,jdbcType=VARCHAR}, 
      #{extraInfo,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.jiaqi.torino.datastore.model.entity.News">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fetcherSource != null">
        fetcherSource,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="publishTime != null">
        publishTime,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="urlHash != null">
        urlHash,
      </if>
      <if test="extraInfo != null">
        extraInfo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fetcherSource != null">
        #{fetcherSource,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="urlHash != null">
        #{urlHash,jdbcType=VARCHAR},
      </if>
      <if test="extraInfo != null">
        #{extraInfo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update news
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fetcherSource != null">
        fetcherSource = #{record.fetcherSource,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publishTime = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.urlHash != null">
        urlHash = #{record.urlHash,jdbcType=VARCHAR},
      </if>
      <if test="record.extraInfo != null">
        extraInfo = #{record.extraInfo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update news
    set id = #{record.id,jdbcType=INTEGER},
      fetcherSource = #{record.fetcherSource,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      publishTime = #{record.publishTime,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      urlHash = #{record.urlHash,jdbcType=VARCHAR},
      extraInfo = #{record.extraInfo,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update news
    set id = #{record.id,jdbcType=INTEGER},
      fetcherSource = #{record.fetcherSource,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      publishTime = #{record.publishTime,jdbcType=TIMESTAMP},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      urlHash = #{record.urlHash,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiaqi.torino.datastore.model.entity.News">
    update news
    <set>
      <if test="fetcherSource != null">
        fetcherSource = #{fetcherSource,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publishTime = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="urlHash != null">
        urlHash = #{urlHash,jdbcType=VARCHAR},
      </if>
      <if test="extraInfo != null">
        extraInfo = #{extraInfo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jiaqi.torino.datastore.model.entity.News">
    update news
    set fetcherSource = #{fetcherSource,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      publishTime = #{publishTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      urlHash = #{urlHash,jdbcType=VARCHAR},
      extraInfo = #{extraInfo,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiaqi.torino.datastore.model.entity.News">
    update news
    set fetcherSource = #{fetcherSource,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      publishTime = #{publishTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      urlHash = #{urlHash,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>